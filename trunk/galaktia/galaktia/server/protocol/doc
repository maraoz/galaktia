***********************************************************************

                       Protocolo Galaktia 0.1

Este es un boceto del protocolo cliente-servidor para la release 0.1 de
Galaktia. Soporta cuatro operaciones básicas y pretende ser extensible
a más features a implementar en siguientes versiones del juego.

authors: Manuel Aráoz
date: 23.06.2009
version: 0.10

***********************************************************************









***********************************************************************
                               Join
***********************************************************************
Client:                                                     Server:
            StartConection      - >

                                < -  CheckProtocolVersion

            RequestUserJoin     - >

                                < -  UserAccepted

                                < -  UserJoined[All]

            UserAcceptedAck     - >

- StartConection: El cliente manda un pedido de empezar una conexión con
el server. 
- CheckProtocolVersion: El server le responde con la versión actual del
protocolo y una url de donde puede descargar el cliente en caso de que
esté desactualizado. 
- RequestUserJoin: El cliente le manda al server un pedido de crear una
sesión de jugador con un determinado username. Después habrá que mandar
acá también la password ingresada por el jugador.
- UserAccepted: El server checkea en su estado interno si no existe un 
usario activo con el mismo username, y en ese caso le manda al cliente
un session_id (que podría ser el mismo username) que deberá enviar con
cada proximo mensaje. En este mensaje el servidor debe mandar la posición
inicial del personaje en el mundo en las coordenadas  adecuadas (todavía
no definimos cómo vamos a hacer eso) y cualquier otra información que ne-
cesite saber el cliente del personaje (por ejemplo, información para di-
bujarlo en pantalla, etc.). En caso de existir un jugador con el username 
solicitado, se manda un mensaje UserRejected.
- UserJoined: Si se mandó el mensaje UserAccepted, el server también le
manda a todos los otros jugadores un mensaje de UserJoined conteniendo el
nombre de jugador del que se acaba de conectar al juego. (Podría servir
para mostrar un mensaje del estilo de "$username ingresó a galaktia"). 
Este mensaje también es extensible a indicar en qué zona del mundo se
conectó, u otros datos de interés.
- UserAcceptedAck: si el server le manda el mensaje UserAccepted, el 
cliente le responde diciéndole que recibió el mensaje (acknowledge). 
Si recibió un UserRejected, el cliente probablemente mande un nuevo 
mensaje de RequestUserJoin. Si el server no recibe este mensaje deberá
reenviar el mensaje UserAccepted.



***********************************************************************
                               Move
***********************************************************************
Client:                                                     Server:
            MoveDxDy           - >

                                < -  PlayerMoved[Some]

                                <-   PlayerEnteredLOS[Some]

            PlayerSeenAck      - >

- MoveDxDy: El cliente le envía un mensaje al server conteniendo su
session_id y una 2-tupla de la forma (dx,dy) que simbolizan el movi-
miento que quiere hacer el jugador. 
- PlayerMoved: El server le manda a todos los jugadores que estén viendo 
al que se movió (incluido el mismo que se movió) un mensaje con la nueva
posición del personaje en coordenadas del mapa (hay que definir el sis-
tema de coordenadas).
- PlayerEnteredLOS: Si el personaje que se movió entra a la linea de visión
de algun jugador, el server le manda este mensaje al cliente conteniendo
algun id que identifique al personaje (puede ser su session_id). También
debería mandarle todos los datos necesarios para mostrar el personaje en
pantalla (como ser sus items, sprites, etc.). 
- PlayerSeenAck: Si el server le manda el mensaje de PlayerEnteredLOS,
el cliente registra internamente el identificador del personaje que entró
a su linea de visión y le devuelve un mensaje de PlayerSeenAck. Si el ser-
ver no recibe este mensaje deberá reenviar el mensaje PlayerEnteredLOS.




***********************************************************************
                               Talk
***********************************************************************
Client:                                                     Server:
            SayThis             - >

                                < -  SomeoneSaid[All]

- SayThis: Contiene el session_id del jugador en el cliente, y un string
conteniendo lo que se quiere decir.
- SomeoneSaid: El server envía un mensaje a todos los jugadores contenien-
do el username del jugador que habló y el string con lo que dijo. Se podría
implementar un SomeoneSaidAck para confirmar el arribo del mensaje, pero
no se cree necesario para este release 0.1.



***********************************************************************
                               Exit
***********************************************************************
Client:                                                     Server:
            StopPlayerSession    - >

                                < -  UserExited[All]

- StopPlayerSession: El cliente le envía al server un mensaje con su 
session_id dicéndole que quiere cerrar la sesión de ese personaje.
- UserExited: El server le envía un mensaje a todos los jugadores 
(incluído el que quiere irse) diciendo que el jugador se va del juego.
Incluye el identificador del jugador que se va. Al recibir este mensaje,
el cliente debe eliminarlo de su registro interno de jugadores en línea
de visión o hacer todos los cambios necesarios para eliminar completamente
el jugador del mundo virtual de galaktia.

            